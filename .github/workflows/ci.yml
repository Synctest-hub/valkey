name: CI

on: [push, pull_request]

permissions:
  contents: read

jobs:

  checkers:
    name: Run static checkers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - check: 'src'
            exclude: 'src/(lzf.*|crccombine.*|crc16.c|crc16_slottable.h|crc64.c|crcspeed.*|fmtargs.h|mt19937-64.*|pqsort.*|setcpuaffinity.c|setproctitle.c|sha1.*|sha256.*|siphash.c|strl.c|unit/test_files.h)'
    steps:
    - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
    - name: Run clang-format style check (.c and .h)
      uses: jidicula/clang-format-action@f62da5e3d3a2d88ff364771d9d938773a618ab5e # v4.11.0
      with:
        clang-format-version: '13'
        check-path: ${{ matrix.path['check'] }}
        exclude-regex: ${{ matrix.path['exclude'] }}

  test-ubuntu-latest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: make
      # Fail build if there are warnings
      # build with TLS just for compilation coverage
      run: make all-with-unit-tests SERVER_CFLAGS='-Werror' BUILD_TLS=yes
    - name: test
      run: |
        sudo apt-get install tcl8.6 tclx
        ./runtest --verbose --tags -slow --dump-logs
    - name: module api test
      run: CFLAGS='-Werror' ./runtest-moduleapi --verbose --dump-logs
    - name: validate commands.def up to date
      run: |
        touch src/commands/ping.json
        make commands.def
        dirty=$(git diff)
        if [[ ! -z  $dirty ]]; then echo $dirty; exit 1; fi
    - name: unit tests
      run: |
        ./src/valkey-unit-tests

  test-sanitizer-address:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: make
        # build with TLS module just for compilation coverage
        run: make SANITIZER=address SERVER_CFLAGS='-Werror -DDEBUG_ASSERTIONS' BUILD_TLS=module
      - name: testprep
        run: sudo apt-get install tcl8.6 tclx -y
      - name: test
        run: ./runtest --verbose --tags -slow --dump-logs
      - name: module api test
        run: CFLAGS='-Werror' ./runtest-moduleapi --verbose --dump-logs

  build-debian-old:
    runs-on: ubuntu-latest
    container: debian:buster
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: make
      run: |
        apt-get update && apt-get install -y build-essential
        make SERVER_CFLAGS='-Werror'

  build-macos-latest:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: make
      run: make SERVER_CFLAGS='-Werror'

  build-32bit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: make
      run: |
        sudo apt-get update && sudo apt-get install libc6-dev-i386
        make SERVER_CFLAGS='-Werror' 32bit

  build-libc-malloc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: make
      run: make SERVER_CFLAGS='-Werror' MALLOC=libc

  build-almalinux8-jemalloc:
    runs-on: ubuntu-latest
    container: almalinux:8
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: make
      run: |
        dnf -y install epel-release gcc make procps-ng which
        make -j SERVER_CFLAGS='-Werror'

